{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [],
   "source": [
    "import csv\n",
    "class MusicSimilarity:\n",
    "    \n",
    "    csv_file = 'Music.csv'\n",
    "    \n",
    "    dataset = []\n",
    "    artist_music = []\n",
    "    music_features = []\n",
    "    \n",
    "    dataset_attributes = [\n",
    "        'acousticness', \n",
    "        'artists', \n",
    "        'danceability', \n",
    "        'energy', \n",
    "        'id', \n",
    "        'liveness', \n",
    "        'loudness', \n",
    "        'name', \n",
    "        'popularity', \n",
    "        'speechiness', \n",
    "        'tempo', \n",
    "        'valence'\n",
    "    ]\n",
    "    \n",
    "    artist_music_attributes = [\n",
    "        'artists',\n",
    "        'name',\n",
    "        'id',\n",
    "    ]\n",
    "    \n",
    "    music_features_attributes = [\n",
    "        'id',\n",
    "        'acousticness',  \n",
    "        'danceability', \n",
    "        'energy', \n",
    "        'liveness', \n",
    "        'loudness', \n",
    "        'popularity', \n",
    "        'speechiness', \n",
    "        'tempo', \n",
    "        'valence'\n",
    "    ]\n",
    "    \n",
    "    def load_dataset(self):\n",
    "        \n",
    "        input_file = csv.DictReader(open(self.csv_file, encoding = 'utf8'))\n",
    "        \n",
    "        for row in input_file:\n",
    "\n",
    "            temp_dict = {}\n",
    "            for key in row:\n",
    "                \n",
    "                if key not in self.dataset_attributes:\n",
    "                    continue\n",
    "                temp_dict[key] = row[key]\n",
    "            \n",
    "            self.dataset.append(temp_dict)\n",
    "        \n",
    "        print('[Dataset Loaded Successfully] \\n********************************\\n Row 0 =>', self.dataset[0])\n",
    "    \n",
    "    def get_artist_music(self):\n",
    "        \n",
    "        \n",
    "        for dict_row in self.dataset:\n",
    "            \n",
    "            temp_dict = {}\n",
    "            \n",
    "            for key in dict_row:\n",
    "        \n",
    "                if key in self.artist_music_attributes:            \n",
    "                    temp_dict[key] = dict_row[key]\n",
    "            \n",
    "            self.artist_music.append(temp_dict)\n",
    "    \n",
    "        print('\\n\\n[Generating Artist Music] \\n********************************\\n Row 0 =>', self.artist_music[0])\n",
    "    \n",
    "    def get_music_features(self):\n",
    "        \n",
    "        for dict_row in self.dataset:\n",
    "            \n",
    "            temp_dict = {}\n",
    "            \n",
    "            for key in dict_row:\n",
    "        \n",
    "                if key in self.music_features_attributes:            \n",
    "                    temp_dict[key] = dict_row[key]\n",
    "            \n",
    "            self.music_features.append(temp_dict)\n",
    "    \n",
    "        print('\\n\\n[Generating Music Features] \\n********************************\\n Row 0 =>', self.artist_music[0])\n",
    "        \n",
    "                "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[Dataset Loaded Successfully] \n",
      "********************************\n",
      " Row 0 => {'acousticness': '0.995', 'artists': \"['Carl Woitschach']\", 'danceability': '0.708', 'energy': '0.195', 'id': '6KbQ3uYMLKb5jDxLF7wYDD', 'liveness': '0.151', 'loudness': '-12.428', 'name': 'Singende Bataillone 1. Teil', 'popularity': '0', 'speechiness': '0.0506', 'tempo': '118.469', 'valence': '0.779'}\n",
      "\n",
      "\n",
      "[Generating Artist Music] \n",
      "********************************\n",
      " Row 0 => {'artists': \"['Carl Woitschach']\", 'id': '6KbQ3uYMLKb5jDxLF7wYDD', 'name': 'Singende Bataillone 1. Teil'}\n",
      "\n",
      "\n",
      "[Generating Music Features] \n",
      "********************************\n",
      " Row 0 => {'artists': \"['Carl Woitschach']\", 'id': '6KbQ3uYMLKb5jDxLF7wYDD', 'name': 'Singende Bataillone 1. Teil'}\n"
     ]
    }
   ],
   "source": [
    "ms = MusicSimilarity()\n",
    "ms.load_dataset()\n",
    "ms.get_artist_music()\n",
    "ms.get_music_features()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
